# Generated by Django 2.1.5 on 2019-01-29 22:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('cpf', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino')], max_length=2, verbose_name='Sexo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Artista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True, verbose_name='Nome')),
                ('tipo', multiselectfield.db.fields.MultiSelectField(choices=[('Diretor', 'Diretor'), ('Ator', 'Ator')], max_length=12, verbose_name='Atividade')),
            ],
            options={
                'verbose_name': 'Artista',
                'verbose_name_plural': 'Artistas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=60, verbose_name='Nome')),
                ('capital', models.BooleanField(default=False, verbose_name='Capital ?')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
                'ordering': ['nome', 'estado'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=150, unique=True, verbose_name='Código')),
                ('local_trabalho', models.CharField(max_length=150, verbose_name='Local de Trabalho')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Distribuidora',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(max_length=150, verbose_name='Razão Social')),
                ('cnpj', models.CharField(max_length=20, verbose_name='CNPJ')),
                ('contato', models.CharField(max_length=150, verbose_name='Pessoa de Contato')),
                ('telefone', models.CharField(max_length=30, verbose_name='Telefone')),
            ],
            options={
                'verbose_name': 'Distribuidora',
                'verbose_name_plural': 'Distribuidoras',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='Elenco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personagem', models.CharField(blank=True, max_length=150, null=True, verbose_name='Personagem')),
                ('principal', models.BooleanField(default=False, verbose_name='Principal ?')),
                ('ator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Artista')),
            ],
            options={
                'verbose_name': 'Elenco',
                'verbose_name_plural': 'Elencos',
                'ordering': ['ator', 'principal'],
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(max_length=100, verbose_name='Logradouro')),
                ('numero', models.PositiveIntegerField(verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=60, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=50, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Cidade')),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
                'ordering': ['logradouro', 'numero', 'cidade'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=60, unique=True, verbose_name='Nome')),
                ('sigla', models.CharField(max_length=30, unique=True, verbose_name='Sigla')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Filme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=150, verbose_name='Título em Português')),
                ('titulo_original', models.CharField(max_length=150, verbose_name='Título Original')),
                ('sinopse', models.TextField(verbose_name='Sinopse')),
                ('classificacao', models.CharField(choices=[('L', 'Livre'), ('10', '10 - Não recomendado para menores de 10 anos'), ('12', '12 - Não recomendado para menores de 12 anos'), ('14', '14 - Não recomendado para menores de 14 anos'), ('16', '16 - Não recomendado para menores de 16 anos'), ('18', '18 - Não recomendado para maiores de 18 anos')], max_length=2, verbose_name='Classificação Indicativa')),
                ('duracao', models.TimeField(verbose_name='Duração')),
                ('ano', models.PositiveSmallIntegerField(verbose_name='Ano de Lançamento')),
                ('pais', models.CharField(max_length=150, verbose_name='País')),
                ('capa', models.ImageField(blank=True, null=True, upload_to='capas/', verbose_name='Capa do Filme')),
                ('diretor', models.ManyToManyField(to='core.Artista')),
                ('distribuidora', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Distribuidora')),
            ],
            options={
                'verbose_name': 'Filme',
                'verbose_name_plural': 'Filmes',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Gênero',
                'verbose_name_plural': 'Gêneros',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_serie', models.CharField(max_length=150, verbose_name='Número de Série')),
                ('data_aquisicao', models.DateField(verbose_name='Data de Aquisição')),
                ('filme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Filme')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
                'ordering': ['data_aquisicao'],
            },
        ),
        migrations.CreateModel(
            name='Midia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('valor', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Valor da Locação')),
            ],
            options={
                'verbose_name': 'Tipo de Mídia',
                'verbose_name_plural': 'Tipos de Mídias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'Cliente'), (2, 'Funcionário'), (3, 'Admin')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefixo', models.CharField(max_length=10, verbose_name='Prefixo')),
                ('numero', models.CharField(max_length=20, verbose_name='Número')),
                ('tipo', models.CharField(choices=[('L', 'Livre'), ('10', '10 - Não recomendado para menores de 10 anos'), ('12', '12 - Não recomendado para menores de 12 anos'), ('14', '14 - Não recomendado para menores de 14 anos'), ('16', '16 - Não recomendado para menores de 16 anos'), ('18', '18 - Não recomendado para maiores de 18 anos')], max_length=15, verbose_name='Tipo de Telefone')),
            ],
            options={
                'verbose_name': 'Telefone',
                'verbose_name_plural': 'Telefones',
                'ordering': ['prefixo', 'tipo'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='tipo_midia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Midia'),
        ),
        migrations.AddField(
            model_name='filme',
            name='genero',
            field=models.ManyToManyField(to='core.Genero'),
        ),
        migrations.AddField(
            model_name='endereco',
            name='estado',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Estado'),
        ),
        migrations.AddField(
            model_name='elenco',
            name='filme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Filme'),
        ),
        migrations.AddField(
            model_name='distribuidora',
            name='endereco',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Endereco'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='endereco',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.Endereco'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='telefones',
            field=models.ManyToManyField(to='core.Telefone'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Estado'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(to='core.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='elenco',
            unique_together={('filme', 'ator')},
        ),
    ]
